(async()=>{let e=null;const n=document.createElement("style");n.textContent="\n    :root {\n      --text-color: #000; \n      --background-color: #fff; \n      --input-border-color: #ccc;\n      --description-color: #666;\n    }\n\n    .pinecone-modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n      overflow: auto;\n    }\n\n    .pinecone-modal-content {\n        background-color: var(--background-color);\n        color: var(--text-color);\n        padding: 20px;\n        border-radius: 8px;\n        width: 80%;\n        max-width: 500px;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    }\n\n    .pinecone-config-inputs {\n      overflow-y: auto;\n      max-height: 80vh;\n      padding-bottom: 5px;\n    }\n\n    .pinecone-input-wrapper {\n        margin-bottom: 15px; \n    }\n\n    .pinecone-input-label {\n      display: block;\n      margin-bottom: 5px;\n      font-weight: bold;\n      color: var(--text-color);\n    }\n\n    .pinecone-input-field {\n      width: 100%;\n      padding: 8px;\n      margin-bottom: 10px;\n      border: 1px solid var(--input-border-color);\n      border-radius: 4px;\n      box-sizing: border-box;\n      background-color: var(--background-color);\n      color: var(--text-color);\n    }\n    \n    .pinecone-input-field::placeholder {\n        color: #999;\n    }\n\n    .pinecone-input-description {\n      font-size: 0.8em;\n      color: var(--description-color);\n      margin-bottom: 10px;\n    }\n\n    .pinecone-saved-indicator {\n      margin-left: 10px;\n      color: green;\n    }\n\n    html.dark .pinecone-modal-content,\n    html.dark .pinecone-modal-content *,\n    html.dark .pinecone-modal-content ::placeholder {\n        color: #fff !important;\n    }\n\n    html.dark .pinecone-modal-content {\n        background-color: #333;\n    }\n\n    html.dark .pinecone-modal-content .pinecone-input-field {\n        background-color: #444;\n        border-color: #666;\n    }\n\n    html.dark .pinecone-modal-content .pinecone-input-description{\n        color: #ccc !important;\n    }\n\n    html.dark .pinecone-modal-content .pinecone-saved-indicator{\n        color: lightgreen !important;\n    }\n\n    /* Style the buttons in dark mode - General button styles */\n    html.dark .pinecone-modal-content button {\n      color: #fff !important;\n    }\n    html.dark .pinecone-modal-content button.bg-blue-600 {\n        background-color: #3b82f6 !important;\n    }\n    html.dark .pinecone-modal-content button.bg-blue-600:hover {\n        background-color: #2563eb !important;\n    }\n    html.dark .pinecone-modal-content button.bg-gray-600 {\n        background-color: #4b5563 !important;\n    }\n    html.dark .pinecone-modal-content button.bg-gray-600:hover {\n        background-color: #374151 !important;\n    }\n\n    .pinecone-success-message,\n    .pinecone-error-message {\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    .pinecone-success-message {\n        color: green;\n    }\n\n    .pinecone-error-message {\n        color: red;\n    }\n\n    html.dark .pinecone-modal-content .pinecone-success-message {\n        color: lightgreen !important;\n    }\n\n    html.dark .pinecone-modal-content .pinecone-error-message {\n        color: lightcoral !important;\n    }\n\n    #pinecone-success-modal .pinecone-modal-content,\n    #pinecone-error-modal .pinecone-modal-content {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        text-align: center; /* Ensure text is centered */\n    }\n\n\n    @media (max-width: 768px) {\n      .pinecone-modal-content {\n        width: 95%; \n      }\n      .pinecone-input-label {\n          font-weight: normal; \n      }\n    }\n  ",document.head.appendChild(n),await r();const t=function(e,n){let t;return function(...o){const i=this;clearTimeout(t),t=setTimeout((()=>e.apply(i,o)),n)}}((function(){const e=document.getElementById("pinecone-host").value,n=document.getElementById("pinecone-api-key").value,t=document.getElementById("pinecone-namespace").value,o=document.getElementById("openai-model").value;let i=document.getElementById("embedding-dimension").value;i||(i="");const r=document.getElementById("openai-api-key").value;localStorage.setItem("saveExtension-pinecone-host",e),localStorage.setItem("saveExtension-pinecone-api-key",n),localStorage.setItem("saveExtension-pinecone-namespace",t),localStorage.setItem("saveExtension-openai-model",o),localStorage.setItem("saveExtension-embedding-dimension",i),localStorage.setItem("saveExtension-pinecone-openai-api-key",r);const a=document.getElementById("config-saved-indicator");a&&(a.textContent="Saved!",setTimeout((()=>{a.textContent=""}),2e3))}),500);function o(){let e=document.getElementById("pinecone-config-modal");e&&e.remove();let n=document.createElement("div");n.id="pinecone-config-modal",n.className="pinecone-modal";const o=document.createElement("div");o.className="pinecone-modal-content";const s=document.createElement("div");function l(e,n,o="text",i="",r=!0,a="",c=""){const l=document.createElement("label");l.textContent=e,l.htmlFor=n,l.className="pinecone-input-label";const d=document.createElement("input");d.type=o,d.id=n,d.name=n,d.placeholder=i,d.required=r,d.value=a,d.className="pinecone-input-field",d.addEventListener("input",t);const m=document.createElement("div");if(m.className="pinecone-input-wrapper",m.appendChild(l),m.appendChild(d),c){const e=document.createElement("p");e.textContent=c,e.className="pinecone-input-description",m.appendChild(e)}s.appendChild(m)}s.id="pinecone-config-inputs",s.className="pinecone-config-inputs",l("Pinecone Index Host URL:","pinecone-host","text","your-index-host.pinecone.io",!0,localStorage.getItem("saveExtension-pinecone-host")||"","The URL of your Pinecone index."),l("Pinecone API Key:","pinecone-api-key","password","Your Pinecone API Key",!0,localStorage.getItem("saveExtension-pinecone-api-key")||"","Your Pinecone API key."),l("Namespace:","pinecone-namespace","text","chat01",!0,localStorage.getItem("saveExtension-pinecone-namespace")||"chat01","Specify a namespace for this chat. Use a unique namespace to prevent data conflicts."),l("OpenAI Embedding Model:","openai-model","text","text-embedding-3-small",!0,localStorage.getItem("saveExtension-openai-model")||"text-embedding-3-small","The OpenAI embedding model."),l("Embedding Dimension (Optional):","embedding-dimension","number","",!1,localStorage.getItem("saveExtension-embedding-dimension")||"","The dimension of the embedding vector."),l("OpenAI API Key:","openai-api-key","password","Your OpenAI API Key",!0,localStorage.getItem("saveExtension-pinecone-openai-api-key")||(localStorage.getItem("TM_useAPIKey")?JSON.parse(localStorage.getItem("TM_useAPIKey")):"")||"","Your OpenAI API key.");const d=document.createElement("span");d.id="config-saved-indicator",d.className="pinecone-saved-indicator",s.appendChild(d);const m=document.createElement("button");m.type="button",m.className="inline-flex items-center px-2 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-gray-400 disabled:cursor-default transition-colors";const p=document.createElement("span");p.className="w-4 h-4 mr-2",p.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 64 64" fill="currentColor" class="w-4 h-4 flex-shrink-0"><path d="M31 48V3M16 20L31 3l15 16" stroke-width="4" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" fill="none"/><path d="M8 46v16h46V46" stroke-width="4" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" fill="none"/></svg>',m.appendChild(p);const u=document.createElement("span");u.textContent="Save Chat to Pinecone",m.appendChild(u),m.onclick=()=>{!async function(){try{const e=window.location.hash.match(/#chat=([^&]+)/);if(!e||!e[1])return void i("No chat selected.");const n=e[1],t=await async function(){return new Promise(((e,n)=>{const t="keyval-store",o=indexedDB.open(t);o.onsuccess=()=>{const n=o.result;e(n)},o.onerror=()=>{n(o.error)}}))}(),o=await async function(e,n){return new Promise(((t,o)=>{const i="keyval",r=e.transaction([i],"readonly"),a=r.objectStore(i),c=`CHAT_${n}`,s=a.get(c);s.onsuccess=()=>{const e=s.result;e?t(e):o(new Error("Chat not found."))},s.onerror=()=>{o(s.error)},r.oncomplete=()=>{e.close()}}))}(t,n),s=o.chatID||o.id||"",l=o.chatTitle||o.title||"Untitled Chat",d=o.messages||o.conversation||[],m={chat_id:s,chatTitle:l,messages:d.map(((e,n)=>({message_number:n,content:e.content,createdAt:e.createdAt,role:e.role,chat_id:s})))},{embeddings:p,totalChunks:u,skippedChunks:g}=await async function(e){try{await r();const n=localStorage.getItem("saveExtension-pinecone-openai-api-key"),t=localStorage.getItem("saveExtension-openai-model"),o=localStorage.getItem("saveExtension-embedding-dimension");if(!n||!t)return void i("OpenAI API key and model must be configured in the extension settings.");const s=function(e){const n=a.get(e);if(!n)throw new Error(`Unsupported embedding model: ${e}`);return n}(t),l=await async function(e){const n=await fetch(`https://tiktoken.pages.dev/js/${e}.json`);if(!n.ok)throw new Error(`Failed to fetch encoding: ${n.status} ${n.statusText}`);return await n.json()}(s),d=new Tiktoken(l),m=e.messages;console.log("Preparing to save chat to Pinecone...");const p=4096,u=[];let g=[],h=0;for(const e of m){const n={role:e.role,content:"string"==typeof e.content?e.content:JSON.stringify(e.content)},t=d.encode(JSON.stringify(n)).length;h+t>p&&(u.push({messages:g}),g=[],h=0),g.push(n),h+=t}g.length>0&&u.push({messages:g}),console.log(`Processing chat in ${u.length} batches.`);const f=[];let b=0,k=0;for(let e=0;e<u.length;e++){const r=u[e];console.log(`Processing batch ${e+1} of ${u.length}...`);try{const{embeddings:e,skipped:i}=await c(r.messages,n,t,o,d);f.push(...e),b+=e.length+i,k+=i}catch(n){return console.error(`Error embedding batch ${e+1}:`,n),void i("An error occurred while embedding part of the chat.  Data may be incomplete.")}}return console.log("Chat embedding complete."),{embeddings:f,totalChunks:b,skippedChunks:k}}catch(e){throw console.error("Error in embedChatData:",e),i("An error occurred while preparing chat data for embedding."),e}}(m);await async function(e,n,t){try{let o=localStorage.getItem("saveExtension-pinecone-host");const i=localStorage.getItem("saveExtension-pinecone-api-key"),r=localStorage.getItem("saveExtension-pinecone-namespace");if(!o||!i||!r)throw new Error("Pinecone host, API key, and namespace must be configured.");o=o.replace(/^https?:\/\//,"");const a=`https://${o}/vectors/upsert`,c=1e3;for(let n=0;n<e.length;n+=c){const t={vectors:e.slice(n,n+c),namespace:r},o=await fetch(a,{method:"POST",headers:{"Api-Key":i,"Content-Type":"application/json"},body:JSON.stringify(t)});if(!o.ok){const e=await o.json();throw new Error(`Pinecone API error: ${o.status} ${o.statusText} - ${JSON.stringify(e)}`)}}let s="Chat data saved to Pinecone successfully!";t>0&&(s=`Chat data partially saved to Pinecone. ${t} of ${n} chunks were skipped due to errors.`),function(e){let n=document.getElementById("pinecone-success-modal");n&&n.remove();let t=document.createElement("div");t.id="pinecone-success-modal",t.className="pinecone-modal";const o=document.createElement("div");o.className="pinecone-modal-content";const i=document.createElement("p");i.textContent=e,i.className="pinecone-success-message",i.style.marginBottom="10px";const r=document.createElement("button");r.type="button",r.className="inline-flex items-center px-2 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:bg-gray-400 disabled:cursor-default transition-colors ml-2",r.onclick=()=>{t.remove()};const a=document.createElement("span");a.className="w-4 h-4 mr-2",a.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4 flex-shrink-0"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>',r.appendChild(a);const c=document.createElement("span");c.textContent="Close",r.appendChild(c),o.appendChild(i),o.appendChild(r),t.appendChild(o),document.body.appendChild(t),setTimeout((()=>{document.getElementById("pinecone-success-modal")&&t.remove()}),3e3)}(s)}catch(e){console.error("Error in upsertToPinecone:",e),i("An error occurred while upserting data to Pinecone: "+e.message)}}(p,u,g)}catch(e){console.error("Error in getAndProcessChatData:",e),i("An error occurred while processing and saving chat data: "+e.message)}}(),n.remove()},s.appendChild(m);const g=document.createElement("button");g.type="button",g.className="inline-flex items-center px-2 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:bg-gray-400 disabled:cursor-default transition-colors ml-2";const h=document.createElement("span");h.className="w-4 h-4 mr-2",h.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4 flex-shrink-0"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>',g.appendChild(h);const f=document.createElement("span");f.textContent="Close",g.appendChild(f),g.onclick=()=>{n.remove()},s.appendChild(g),o.appendChild(s),n.appendChild(o),document.body.appendChild(n)}function i(e){let n=document.getElementById("pinecone-error-modal");n&&n.remove();let t=document.createElement("div");t.id="pinecone-error-modal",t.className="pinecone-modal";const o=document.createElement("div");o.className="pinecone-modal-content";const i=document.createElement("p");i.textContent=e,i.className="pinecone-error-message",i.style.marginBottom="10px";const r=document.createElement("button");r.type="button",r.className="inline-flex items-center px-2 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:bg-gray-400 disabled:cursor-default transition-colors ml-2",r.onclick=()=>{t.remove()};const a=document.createElement("span");a.className="w-4 h-4 mr-2",a.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4 flex-shrink-0"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>',r.appendChild(a);const c=document.createElement("span");c.textContent="Close",r.appendChild(c),o.appendChild(i),o.appendChild(r),t.appendChild(o),document.body.appendChild(t)}async function r(){return e||(e=import("https://esm.sh/js-tiktoken@1.0.19/lite").then((({Tiktoken:e})=>{window.Tiktoken=e})).catch((n=>{throw console.error("Failed to load js-tiktoken library:",n),e=null,n}))),e}const a=new Map([["text-embedding-ada-002","cl100k_base"],["text-embedding-3-small","o200k_base"],["text-embedding-3-large","o200k_base"]]);async function c(e,n,t,o,r){let a=JSON.stringify(e),c=8192,l=1024;let d=0;l>=c&&(console.warn(`overlapTokens (${l}) is >= maxTokens (${c}). Adjusting overlapTokens.`),l=c-1);let m=[],p=r.encode(a);p.length>c?(console.log("Large chat, splitting into smaller parts..."),m=s(p,r,c,l)):(m.push(a),console.log("Input within token limit. No chunking required."));const u=[];for(let a=0;a<m.length;a++){let g=m[a],h=r.encode(g),f=!1,b=0;for(;!f&&b<5;){if(h.length>c){console.error(`Chunk ${a+1} exceeds max tokens (${h.length} > ${c}).`),console.warn(`Skipping chunk ${a+1} due to excessive size.`),d++,f=!0;break}const i={input:g,model:t};o&&(i.dimensions=parseInt(o,10));try{console.log(`Sending chunk ${a+1} of ${m.length} to OpenAI for embedding (Attempt ${b+1}, Token Count: ${h.length}).`);const t=await fetch("https://api.openai.com/v1/embeddings",{method:"POST",headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json"},body:JSON.stringify(i)});if(!t.ok){const e=await t.json();if(400===t.status&&e.error&&e.error.message.includes("maximum context length")&&0===a){console.warn(`Chunk ${a+1} exceeded token limit. Reducing chunk size and retrying (Attempt ${b+1}).`),b++,c=Math.floor(.75*c),l=Math.floor(.75*l),l>=c&&(l=c-1),m=s(p,r,c,l),g=m[a],h=r.encode(g),console.log(`Re-chunked into ${m.length} parts. Trying again`);continue}console.error(`OpenAI API error: ${t.status} - ${e.error.message}`);break}{const n=(await t.json()).data[0];u.push({id:`${e[0].chat_id}-batch-${a}`,values:n.embedding,metadata:{chat_id:e[0].chat_id,message_count:e.length,chunk_number:a+1,total_chunks:m.length}}),f=!0}}catch(e){console.error(`Error in getEmbeddings for chunk ${a+1}:`,e);break}}f||(console.warn(`Failed to embed chunk ${a+1} after ${b} retries. Skipping this chunk.`),i(`Failed to process part of the chat (chunk ${a+1}).  Continuing with the rest...`),d++)}return console.log(`Embedding process complete. ${u.length} of ${m.length} chunks embedded.`),{embeddings:u,skipped:d}}function s(e,n,t,o){const i=[];let r=0,a=0,c=0;for(;a<e.length;){if(c++,c>1e4)throw console.error("Maximum iterations reached in chunking loop. This indicates a logic error."),new Error("Maximum iterations reached in chunking loop.");const s=Math.min(r+t,e.length),l=e.slice(r,s),d=n.decode(l);i.push(d),r=Math.max(0,s-o),r=Math.min(r+1,s),a=s}return i}!function(){const e=document.querySelector('button[data-element-id="workspace-tab-settings"]');if(!e)return void console.warn("Settings button not found.");const n=e.closest("div");if(!n)return void console.warn("Button container not found.");const t=document.createElement("button");t.setAttribute("data-element-id","workspace-tab-save-to-pinecone"),t.style.color=window.getComputedStyle(n).color,t.style.fontFamily=window.getComputedStyle(n).fontFamily,t.style.alignItems="center",t.className=e.className;const i=document.createElement("span");i.className=e.querySelector("span").className;const r=document.createElement("span"),a=e.querySelector("span > svg");r.className=a?a.className:"w-4 h-4 flex-shrink-0",r.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 64 64" fill="currentColor" class="w-4 h-4 flex-shrink-0"><path d="M31 48V3M16 20L31 3l15 16" stroke-width="4" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" fill="none"/><path d="M8 46v16h46V46" stroke-width="4" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" fill="none"/></svg>';const c=document.createElement("span"),s=e.querySelector("span > span");c.className=s?s.className:"font-normal self-stretch text-center text-xs leading-4 md:leading-none",c.textContent="Save",i.appendChild(r),i.appendChild(c),t.appendChild(i),t.onclick=()=>{o()},e.parentElement.insertBefore(t,e.nextSibling)}()})();
