(async()=>{let e=null;const n=document.createElement("style");n.textContent="\n    :root {\n      --text-color: #000; \n      --background-color: #fff; \n      --input-border-color: #ccc;\n      --button-background-color: #007bff;\n      --button-text-color: #fff;\n      --button-hover-background-color: #0056b3;\n      --description-color: #666;\n      --saved-indicator-color: green;\n    }\n\n    \n    @media (prefers-color-scheme: dark) {\n      :root {\n        --text-color: #fff; \n        --background-color: #333; \n        --input-border-color: #555;\n        --button-background-color: #0056b3; \n        --description-color: #aaa;\n      }\n    }\n\n    .pinecone-modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n      overflow: auto;\n    }\n\n    .pinecone-modal-content {\n      background-color: var(--background-color);\n      padding: 20px;\n      border-radius: 8px;\n      width: 80%;\n      max-width: 500px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    }\n\n    .pinecone-config-inputs {\n      overflow-y: auto;\n      max-height: 80vh;\n  padding-bottom: 5px;\n    }\n\n    .pinecone-input-wrapper {\n        margin-bottom: 15px; \n    }\n\n    .pinecone-input-label {\n      display: block;\n      margin-bottom: 5px;\n      color: var(--text-color);\n      font-weight: bold; \n    }\n\n    .pinecone-input-field {\n      width: 100%;\n      padding: 8px;\n      margin-bottom: 10px;\n      border: 1px solid var(--input-border-color);\n      border-radius: 4px;\n      box-sizing: border-box;\n      color: var(--text-color);\n      background-color: var(--background-color); \n    }\n    \n    .pinecone-input-field::placeholder {\n        color: #999;\n    }\n\n    .pinecone-input-description {\n      font-size: 0.8em;\n      color: var(--description-color);\n      margin-bottom: 10px;\n    }\n\n    .pinecone-saved-indicator {\n      margin-left: 10px;\n      color: var(--saved-indicator-color);\n    }\n\n    \n    @media (max-width: 768px) {\n      .pinecone-modal-content {\n        width: 95%; \n      }\n      .pinecone-input-label {\n          font-weight: normal; \n      }\n    }\n  ",document.head.appendChild(n),await a();const t=function(e,n){let t;return function(...o){const a=this;clearTimeout(t),t=setTimeout((()=>e.apply(a,o)),n)}}((function(){const e=document.getElementById("pinecone-host").value,n=document.getElementById("pinecone-api-key").value,t=document.getElementById("pinecone-namespace").value,o=document.getElementById("openai-model").value;let a=document.getElementById("embedding-dimension").value;a||(a="");const i=document.getElementById("openai-api-key").value;localStorage.setItem("saveExtension-pinecone-host",e),localStorage.setItem("saveExtension-pinecone-api-key",n),localStorage.setItem("saveExtension-pinecone-namespace",t),localStorage.setItem("saveExtension-openai-model",o),localStorage.setItem("saveExtension-embedding-dimension",a),localStorage.setItem("saveExtension-pinecone-openai-api-key",i);const r=document.getElementById("config-saved-indicator");r&&(r.textContent="Saved!",r.style.color="green",setTimeout((()=>{r.textContent=""}),2e3))}),500);function o(){let e=document.getElementById("pinecone-config-modal");e&&e.remove();let n=document.createElement("div");n.id="pinecone-config-modal",n.className="pinecone-modal";const o=document.createElement("div");o.className="pinecone-modal-content";const s=document.createElement("div");function c(e,n,o="text",a="",i=!0,r="",c=""){const l=document.createElement("label");l.textContent=e,l.htmlFor=n,l.className="pinecone-input-label";const d=document.createElement("input");d.type=o,d.id=n,d.name=n,d.placeholder=a,d.required=i,d.value=r,d.className="pinecone-input-field",d.addEventListener("input",t);const m=document.createElement("div");if(m.className="pinecone-input-wrapper",m.appendChild(l),m.appendChild(d),c){const e=document.createElement("p");e.textContent=c,e.className="pinecone-input-description",m.appendChild(e)}s.appendChild(m)}s.id="pinecone-config-inputs",s.className="pinecone-config-inputs",c("Pinecone Index Host URL:","pinecone-host","text","your-index-host.pinecone.io",!0,localStorage.getItem("saveExtension-pinecone-host")||"","The URL of your Pinecone index."),c("Pinecone API Key:","pinecone-api-key","password","Your Pinecone API Key",!0,localStorage.getItem("saveExtension-pinecone-api-key")||"","Your Pinecone API key."),c("Namespace:","pinecone-namespace","text","chat01",!0,localStorage.getItem("saveExtension-pinecone-namespace")||"chat01","Specify a namespace for this chat. Use a unique namespace to prevent data conflicts."),c("OpenAI Embedding Model:","openai-model","text","text-embedding-3-small",!0,localStorage.getItem("saveExtension-openai-model")||"text-embedding-3-small","The OpenAI embedding model."),c("Embedding Dimension (Optional):","embedding-dimension","number","",!1,localStorage.getItem("saveExtension-embedding-dimension")||"","The dimension of the embedding vector."),c("OpenAI API Key:","openai-api-key","password","Your OpenAI API Key",!0,localStorage.getItem("saveExtension-pinecone-openai-api-key")||(localStorage.getItem("TM_useAPIKey")?JSON.parse(localStorage.getItem("TM_useAPIKey")):"")||"","Your OpenAI API key.");const l=document.createElement("span");l.id="config-saved-indicator",l.className="pinecone-saved-indicator",s.appendChild(l);const d=document.createElement("button");d.type="button",d.className="inline-flex items-center px-2 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-gray-400 disabled:cursor-default transition-colors";const m=document.createElement("span");m.className="w-4 h-4 mr-2",m.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 64 64" fill="currentColor" class="w-4 h-4 flex-shrink-0"><path d="M31 48V3M16 20L31 3l15 16" stroke-width="4" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" fill="none"/><path d="M8 46v16h46V46" stroke-width="4" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" fill="none"/></svg>',d.appendChild(m);const p=document.createElement("span");p.textContent="Save Chat to Pinecone",d.appendChild(p),d.onclick=()=>{!async function(){try{const e=window.location.hash.match(/#chat=([^&]+)/);if(!e||!e[1])return void alert("No chat selected.");const n=e[1],t=await async function(){return new Promise(((e,n)=>{const t="keyval-store",o=indexedDB.open(t);o.onsuccess=()=>{const n=o.result;e(n)},o.onerror=()=>{n(o.error)}}))}(),o=await async function(e,n){return new Promise(((t,o)=>{const a="keyval",i=e.transaction([a],"readonly"),r=i.objectStore(a),s=`CHAT_${n}`,c=r.get(s);c.onsuccess=()=>{const e=c.result;e?t(e):o(new Error("Chat not found."))},c.onerror=()=>{o(c.error)},i.oncomplete=()=>{e.close()}}))}(t,n),s=o.chatID||o.id||"",c=o.chatTitle||o.title||"Untitled Chat",l=o.messages||o.conversation||[],d={chat_id:s,chatTitle:c,messages:l.map(((e,n)=>({message_number:n,content:e.content,createdAt:e.createdAt,role:e.role,chat_id:s})))},m=await async function(e){try{await a();const t=localStorage.getItem("saveExtension-pinecone-openai-api-key"),o=localStorage.getItem("saveExtension-openai-model"),s=localStorage.getItem("saveExtension-embedding-dimension");if(!t||!o)throw new Error("OpenAI API key and model must be configured.");const c=function(e){const n=i.get(e);if(!n)throw new Error(`Unsupported embedding model: ${e}`);return n}(o),l=await async function(e){const n=await fetch(`https://tiktoken.pages.dev/js/${e}.json`);if(!n.ok)throw new Error(`Failed to fetch encoding: ${n.status} ${n.statusText}`);return await n.json()}(c),d=new Tiktoken(l),m=e.messages,p=[],u=8191,g=50,h=.1,f={};function n(e){return new Blob([e]).size}let b=[],x=0;for(const y of m){const v="string"==typeof y.content?y.content:JSON.stringify(y.content);let k=f[v];void 0===k&&(k=d.encode(v).length,f[v]=k);const E={chat_id:y.chat_id,message_number:y.message_number,role:y.role,content:y.content},I=n(JSON.stringify(E)),C=Math.max(g,h*I);x+k>u-C&&b.length>0&&(p.push(b),b=[],x=0),b.push({...y,content:v}),x+=k}b.length>0&&p.push(b);const w=[];for(const S of p){const N=await r(S,t,o,s);w.push(...N)}return w}catch(A){throw console.error("Error in embedChatData:",A),A}}(d);await async function(e){try{let n=localStorage.getItem("saveExtension-pinecone-host");const t=localStorage.getItem("saveExtension-pinecone-api-key"),o=localStorage.getItem("saveExtension-pinecone-namespace");if(!n||!t||!o)throw new Error("Pinecone host, API key, and namespace must be configured.");n=n.replace(/^https?:\/\//,"");const a=`https://${n}/vectors/upsert`,i=1e3;for(let n=0;n<e.length;n+=i){const r={vectors:e.slice(n,n+i),namespace:o},s=await fetch(a,{method:"POST",headers:{"Api-Key":t,"Content-Type":"application/json"},body:JSON.stringify(r)});if(!s.ok){const e=await s.json();throw new Error(`Pinecone API error: ${s.status} ${s.statusText} - ${JSON.stringify(e)}`)}}alert("Chat data saved to Pinecone successfully!")}catch(e){console.error("Error in upsertToPinecone:",e),alert("An error occurred while upserting data to Pinecone: "+e.message)}}(m)}catch(e){console.error("Error in getAndProcessChatData:",e),alert("An error occurred while processing and saving chat data: "+e.message)}}(),n.remove()},s.appendChild(d);const u=document.createElement("button");u.type="button",u.className="inline-flex items-center px-2 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:bg-gray-400 disabled:cursor-default transition-colors ml-2";const g=document.createElement("span");g.className="w-4 h-4 mr-2",g.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4 flex-shrink-0"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>',u.appendChild(g);const h=document.createElement("span");h.textContent="Close",u.appendChild(h),u.onclick=()=>{n.remove()},s.appendChild(u),o.appendChild(s),n.appendChild(o),document.body.appendChild(n)}async function a(){return e||(e=import("https://esm.sh/js-tiktoken@1.0.19/lite").then((({Tiktoken:e})=>{window.Tiktoken=e})).catch((n=>{throw console.error("Failed to load js-tiktoken library:",n),e=null,n}))),e}const i=new Map([["text-embedding-ada-002","cl100k_base"],["text-embedding-3-small","o200k_base"],["text-embedding-3-large","o200k_base"]]);async function r(e,n,t,o){const a={input:e.map((e=>{let n="string"==typeof e.content?e.content:JSON.stringify(e.content);return""===n.trim()&&(n=" "),n})),model:t};o&&(a.dimensions=parseInt(o,10));const i=await fetch("https://api.openai.com/v1/embeddings",{method:"POST",headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json"},body:JSON.stringify(a)});if(!i.ok){const e=await i.json();throw new Error(`OpenAI API error: ${i.status} ${i.statusText} - ${JSON.stringify(e)}`)}return(await i.json()).data.map(((n,t)=>{const o=e[n.index];return{id:`${o.chat_id}-message${o.message_number}`,values:n.embedding,metadata:{chat_id:o.chat_id,message_number:o.message_number,role:o.role,content:o.content}}}))}!function(){const e=document.querySelector('button[data-element-id="workspace-tab-settings"]');if(!e)return void console.warn("Settings button not found.");const n=e.closest("div");if(!n)return void console.warn("Button container not found.");const t=document.createElement("button");t.setAttribute("data-element-id","workspace-tab-save-to-pinecone"),t.style.color=window.getComputedStyle(n).color,t.style.fontFamily=window.getComputedStyle(n).fontFamily,t.style.alignItems="center",t.className=e.className;const a=document.createElement("span");a.className=e.querySelector("span").className;const i=document.createElement("span"),r=e.querySelector("span > svg");i.className=r?r.className:"w-4 h-4 flex-shrink-0",i.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 64 64" fill="currentColor" class="w-4 h-4 flex-shrink-0"><path d="M31 48V3M16 20L31 3l15 16" stroke-width="4" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" fill="none"/><path d="M8 46v16h46V46" stroke-width="4" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" fill="none"/></svg>';const s=document.createElement("span"),c=e.querySelector("span > span");s.className=c?c.className:"font-normal self-stretch text-center text-xs leading-4 md:leading-none",s.textContent="Save",a.appendChild(i),a.appendChild(s),t.appendChild(a),t.onclick=()=>{o()},e.parentElement.insertBefore(t,e.nextSibling)}()})();
